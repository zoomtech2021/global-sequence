info:
  build:
    artifact: '@project.artifactId@'
    description: '@project.description@'
    name: '@project.name@'
    version: '@project.version@'

server:
  port: 20000
  servlet:
    context-path: /

management:
  endpoint:
    health:
      enabled: true
    info:
      enabled: true
  endpoints:
    enabled-by-default: false
    web:
      base-path: /

spring:
  application:
    name: global-sequence
  main:
    allow-bean-definition-overriding: true
  datasource:
     type: com.alibaba.druid.pool.DruidDataSource
     driver-class-name: com.mysql.jdbc.Driver
     url: jdbc:mysql://192.168.16.225:3306/sequence?useUnicode=true&characterEncoding=utf8&useSSL=false
     username: global_sequence
     password: 918jyAIUcps=
     initialSize: 30
     minIdle: 30
     maxActive: 100
     # 配置获取连接等待超时的时间
     maxWait: 60000
     # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
     timeBetweenEvictionRunsMillis: 60000
     # 配置一个连接在池中最小生存的时间，单位是毫秒
     minEvictableIdleTimeMillis: 300000
     validationQuery: SELECT 1 FROM DUAL
     testWhileIdle: true
     testOnBorrow: false
     testOnReturn: false
     # 打开PSCache，并且指定每个连接上PSCache的大小
     poolPreparedStatements: true
     maxPoolPreparedStatementPerConnectionSize: 30
     # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
     filters: stat,wall,log4j
     # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
     connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

dubbo:
  application:
    name: ${spring.application.name}
  consumer:
    check: false
  protocol:
    name: dubbo
    port: 20001
  registry:
    address: zookeeper://192.168.16.225:2181

logging:
   level:
     root: info


